require 'rubygems'
require 'yaml'
require 'clamp'
require 'pathname'
require 'grit'

# These will all be classes I use later, but there I want to just say
# 'class Gracl::Commmand::Foo' rather than doing the whole subclass
# fiesta.  I hate you ruby.
class Gracl
    class Command < Clamp::Command
    end
end

require 'gracl/config'
require 'gracl/repo'
require 'gracl/user'
require 'gracl/group'
require 'gracl/permission'
require 'gracl/command/dump'
require 'gracl/command/shell'
require 'gracl/command/setup'
require 'gracl/command/install'
require 'gracl/command'


class Gracl
    attr_accessor :config_directory
    def initialize(config_directory = ".")
        self.config_directory = config_directory
    end
    
    def config
        return @config if @config
        @config = Gracl::Config.new(config_directory)
    end

    def binary
        Pathname.new( $0 ).realpath
    end

    def install_hooks
        # in the gracl-admin repository, add in the post-commit hook
    end

    def install_ssh_config
        config
        puts "### DO NOT EDIT THIS FILE ###"
        puts "### This file is auto-generated based on the contents of the gracl-admin repository"
        @config.users.each do |user|
            user.keys.each do |key|
                puts %{command="#{binary} shell --user #{user.name}",no-port-forwarding,} +
                    %{no-X11-forwarding,no-agent-forwarding,no-pty #{key}}
                end
        end
    end

    def create_admin_repository(admin)
        repo = Grit::Repo.init_bare(".gracl.git")
        index = repo.index
        index.add("gracl.conf", initial_config)
        index.add("keydir/admin/admin.pub", IO.read(admin))
        index.commit("Initial creation of gracl-admin")
    end
    
    def initial_config
'''
Gracl::Config.setup do
    repository "gracl-admin" do
        writable    "admin"
    end
end
'''
    end

    def install_new_config
    end
end
