require 'rubygems'
require 'yaml'
require 'clamp'
require 'pathname'
require 'grit'

# These will all be classes I use later, but there I want to just say
# 'class Gracl::Commmand::Foo' rather than doing the whole subclass
# fiesta.  I hate you ruby.
class Gracl
    class Command < Clamp::Command
    end
end

require 'gracl/config'
require 'gracl/repo'
require 'gracl/user'
require 'gracl/group'
require 'gracl/permission'
require 'gracl/permission/branch'
require 'gracl/permission/path'
require 'gracl/permission/read'
require 'gracl/permission/write'
require 'gracl/command/dump'
require 'gracl/command/shell'
require 'gracl/command/setup'
require 'gracl/command/install'
require 'gracl/command/adminpostupdatehook'
require 'gracl/command/updatehook'
require 'gracl/command'


class Gracl
    attr_accessor :repositories
    attr_accessor :admin_repo
    attr_accessor :admin_checkout
    def initialize
        self.repositories   = File.expand_path("~/repositories")
        self.admin_repo     = "#{self.repositories}/gracl-admin.git"
        self.admin_checkout = File.expand_path("~/.gracl")
    end

    def config
        return @config if @config
        @config = Gracl::Config.new(admin_checkout)
    end

    def binary
        binary = Pathname.new($0).realpath
    end

    def install_ssh_config
        if !File.directory?(File.expand_path("~/.ssh"))
            Dir.mkdir(File.expand_path("~/.ssh"), 0755)
        end
        auth = File.open(File.expand_path("~/.ssh/authorized_keys"), "w", 0600)
        auth.puts "### DO NOT EDIT THIS FILE ###"
        auth.puts "### This file is auto-generated based on the contents of the gracl-admin repository"
        config.users.each do |user|
            user.keys.each do |key|
                auth.puts %{command="#{binary} shell --user #{user.name}",no-port-forwarding,} +
                    %{no-X11-forwarding,no-agent-forwarding,no-pty #{key}}
            end
        end
    end

    def install_hooks
        config.repos.each do |repo|
            path = "#{repositories}/#{repo.name}.git"
            next unless File.directory? path
            Dir.chdir path do
                if repo.name == 'gracl-admin'
                    hook = File.open("hooks/post-update", "w", 0755)
                    hook.puts "#!/bin/sh\n#{binary} admin-post-update-hook\n"
                end
                hook = File.open("hooks/update", "w", 0755)
                hook.puts "#!/bin/sh\n#{binary} update-hook\n"
             end
        end
    end

end
